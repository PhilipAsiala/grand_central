[default]
[AWS CloudWatch Custom Logs]
request.ui_dispatch_app = grand-central
alert.suppress = 0
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type"]
dispatch.latest_time = now
quantity = 0
dispatch.earliest_time = -1mon
search = index=aws_price sourcetype=aws_cloudwatch_price_list Unit=GB Version=Current "Group Description"="Existing system, application, and custom log files"  | outputlookup aws_cloudwatch_custom_logs_pricelist.csv
display.general.type = statistics
display.page.search.tab = statistics
relation = greater than
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_cloudwatch_custom_logs_pricelist.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[AWS CloudWatch Logs AWS Vended]
request.ui_dispatch_app = grand-central
alert.suppress = 0
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type","Location","EndingRange","PricePerUnit","Product Family","Group Description"]
dispatch.latest_time = now
quantity = 0
dispatch.earliest_time = -1mon
search = index=aws_price sourcetype=aws_cloudwatch_price_list Unit=GB Version=Current "Group Description"="Log files generated by AWS services" | outputlookup aws_cloudwatch_aws_vended_logs_pricelist.csv
display.general.type = statistics
display.page.search.tab = statistics
relation = greater than
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_cloudwatch_aws_vended_logs_pricelist.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[AWS CloudWatch Price List Update]
alert.suppress = 0
request.ui_dispatch_app = grand-central
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type"]
display.page.search.tab = statistics
dispatch.earliest_time = -1mon
quantity = 0
search = index=aws_price sourcetype=aws_cloudwatch_price_list Unit="GB-Mo" Version=Current | outputlookup aws_cloudwatch_pricelist.csv
display.general.type = statistics
dispatch.latest_time = now
relation = greater than
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_cloudwatch_pricelist.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[AWS CloudWatch Storage Price List Update]
alert.suppress = 0
request.ui_dispatch_app = grand-central
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type"]
display.page.search.tab = statistics
dispatch.earliest_time = -1mon
quantity = 0
search = index=main sourcetype=aws_cloudwatch_price_list Unit="GB-Mo" Version=Current | outputlookup aws_cloudwatch_pricelist.csv append=false
display.general.type = statistics
dispatch.latest_time = now
relation = greater than
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_cloudwatch_pricelist.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[Account Without Data Collection]
alert.suppress = 1
request.ui_dispatch_app = grand-central
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type","StartingRange","EndingRange","PricePerUnit","PriceDescription","operation","Description","Location","Group"]
dispatch.latest_time = rt-0m
dispatch.earliest_time = rt-1m
display.general.type = statistics
relation = greater than
action.email.useNSSubject = 1
cron_schedule = * * * * *
display.page.search.mode = fast
enableSched = 1
action.email.cc = kamir@splunk.com
alert.suppress.period = 24h
action.email.message.alert = Your AWS Account has been found to be added into management but does not currently have any deployments for data collection added. Please contact your AWS Administrator to add your account to management. \
\
Thanks,\
Splunk Admin
action.email.to = $aws_account_email$
quantity = 0
search = | rest /servicesNS/nobody/grand-central/grand_central_aws_accounts | rename grand_central_aws_accounts_link_alternate as grand_central_aws_account_link_alternate | join type=left grand_central_aws_account_link_alternate [| rest /servicesNS/nobody/grand-central/deployed_cloudformation_templates] | where data_collection_deployment_success=0 | stats  count,values(aws_account_id) AS "New Accounts" by data_collection_deployment_success, aws_account_email | table "New Accounts" aws_account_email
display.page.search.tab = statistics
action.email = 1
counttype = number of events
alert.track = 0
request.ui_dispatch_view = search

[Update C5 Prices]
request.ui_dispatch_app = grand-central
display.visualizations.show = 0
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy"]
display.page.search.tab = statistics
dispatch.earliest_time = 0
display.general.type = statistics
search = index=main "Instance Type" = c5* Tenancy=Shared TermType!=OnDemand "Operating System"=Linux "Pre Installed S_W"=NA LeaseContractLength=1yr OfferingClass=convertible  PurchaseOption="No Upfront" | eval monthly_cost=(PricePerUnit*730) | eval vendor="AWS" | table vendor LeaseContractLength Location monthly_cost OfferingClass PriceDescription PricePerUnit serviceName Tenancy TermType | outputlookup instance_price append=false
description = update C5 instance prices
display.events.type = raw
action.email.useNSSubject = 1
alert.track = 0
request.ui_dispatch_view = search

[Update Firehose Pricing]
alert.suppress = 0
request.ui_dispatch_app = grand-central
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type","StartingRange","EndingRange","PricePerUnit","PriceDescription","operation","Description","Location","Group"]
dispatch.latest_time = now
dispatch.earliest_time = -1mon
quantity = 0
search = index=aws_price sourcetype="aws_kinesis_firehose_price_list" Description="Per GB of data ingested"  operation=PutRecord | dedup PriceDescription | table PriceDescription PricePerUnit StartingRange EndingRange Description Location | outputlookup aws_firehose_prices append=false
display.general.type = statistics
display.page.search.tab = statistics
relation = greater than
description = Update Kinesis Data Firehose Pricing for putting data
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_firehose_prices.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[Update Lambda Pricing]
request.ui_dispatch_app = grand-central
dispatch.earliest_time = -1mon
display.general.type = statistics
relation = greater than
enableSched = 1
quantity = 0
display.page.search.tab = statistics
alert.suppress = 0
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy","sourcetypes.splunk_resource_usage","type","StartingRange","EndingRange","PricePerUnit","PriceDescription","operation","Description","Location","Group"]
dispatch.latest_time = now
cron_schedule = 0 0 1 * *
action.lookup = 1
search = index=main sourcetype=aws_lambda_price_list Unit="Lambda-GB-Second" Group="AWS-Lambda-Duration" | table Location PricePerUnit PriceDescription | outputlookup lambda_pricing
counttype = number of events
alert.track = 0
action.lookup.filename = lambda_pricing.csv
request.ui_dispatch_view = search

[Update M5 Pricing]
request.ui_dispatch_app = grand-central
display.visualizations.show = 0
display.events.fields = ["host","source","sourcetype","terms.OnDemand.2MY95AYMSPD6MQ8Y.JRTCKXETXF.priceDimensions.2MY95AYMSPD6MQ8Y.JRTCKXETXF.6YS6EN2CT7.pricePerUnit.USD","Tenancy"]
display.page.search.tab = statistics
dispatch.earliest_time = 0
display.general.type = statistics
search = index=main "Instance Type" = m5* Tenancy=Shared TermType!=OnDemand "Operating System"=Linux "Pre Installed S_W"=NA LeaseContractLength=1yr OfferingClass=convertible  PurchaseOption="No Upfront" | eval monthly_cost=(PricePerUnit*730) | eval vendor="AWS" | table "Instance Type" vendor LeaseContractLength Location monthly_cost OfferingClass PriceDescription PricePerUnit serviceName Tenancy TermType | outputlookup instance_price append=false
description = Updates lookup table for m5 pricing
display.events.type = raw
action.email.useNSSubject = 1
alert.track = 0
request.ui_dispatch_view = search

[Update S3 Delivery Cost]
alert.suppress = 0
request.ui_dispatch_app = grand-central
display.events.fields = ["host","source","sourcetype","Product Family","Currency","Location","PriceDescription","PricePerUnit","Storage Class","TermType","Unit","Volume Type","EndingRange","StartingRange"]
dispatch.latest_time = now
dispatch.earliest_time = -1mon
quantity = 0
search = index=main sourcetype="aws_s3_price_list"  Unit="GB-Mo" "Storage Class"="Intelligent-Tiering" | outputlookup aws_s3_delivery_cost append=false
display.general.type = statistics
display.page.search.tab = statistics
relation = greater than
description = Update S3 delivery costs
counttype = number of events
alert.track = 0
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_s3_delivery_cost.csv
enableSched = 1
request.ui_dispatch_view = search
action.lookup = 1

[Update S3 Storage Pricing]
alert.suppress = 0
display.visualizations.show = 1
display.events.fields = ["host","source","sourcetype","Product Family","Currency","Location","PriceDescription","PricePerUnit","Storage Class","TermType","Unit","Volume Type"]
dispatch.latest_time = now
dispatch.earliest_time = -1mon
quantity = 01
search = index="main" sourcetype="aws_s3_price_list" Unit="GB-mo" "Volume Type"="Standard - Infrequent Access" | table Currency Location PriceDescription PricePerUnit "Product Family" "Storage Class" TermType Unit "Volume Type" | outputlookup aws_s3_storage_cost append=false
relation = greater than
description = Updates S3 storage lookup pricing
display.events.type = list
cron_schedule = 0 0 1 * *
action.lookup.filename = aws_s3_storage_cost.csv
enableSched = 1
action.lookup = 1
counttype = number of events

